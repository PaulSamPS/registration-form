{"version":3,"sources":["page-component/Form.module.scss","components/DropDown/DropDown.module.scss","components/Header/Header.module.scss","components/Input/Inputs.module.scss","components/Button/Button.module.scss","components/WhiteBlock/WhiteBlock.module.scss","components/Button/Button.tsx","components/DropDown/DropDown.tsx","components/Header/Header.tsx","components/Input/Input.tsx","components/WhiteBlock/WhiteBlock.tsx","page-component/Form.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","className","cn","styles","btn","lang","id","name","DropDown","useState","modal","setModal","item","setItem","activeLang","map","l","dropDown","selectedLang","active","onClick","width","height","viewBox","fill","xmlns","d","index","onSelect","Header","title","subTitle","signIn","Input","forwardRef","ref","error","props","inputWrapper","input","errorMessage","message","WhiteBlock","children","whiteBg","Form","useForm","register","handleSubmit","errors","formState","value","setValue","emailValue","setEmailValue","phoneValue","setPhoneValue","activeCheck","setActiveCheck","checkWarning","setCheckWarning","valueCheck","valueName","replace","valuePhone","onSubmit","data","console","log","alert","form","label","required","pattern","placeholder","type","onChange","e","target","email","phone","wrapperCheckBox","checkBox","activeCheckBox","activeCheckWarning","conditions","disableBtn","activeBtn","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b830302f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2hsAr\",\"label\":\"Form_label__36QJH\",\"wrapperCheckBox\":\"Form_wrapperCheckBox__1r6pC\",\"checkBox\":\"Form_checkBox__1cuFh\",\"activeCheckBox\":\"Form_activeCheckBox__3PjkD\",\"activeCheckWarning\":\"Form_activeCheckWarning__37bvh\",\"conditions\":\"Form_conditions__3xrFx\",\"disableBtn\":\"Form_disableBtn__1g_AB\",\"activeBtn\":\"Form_activeBtn__1UEP7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropDown\":\"DropDown_dropDown__37RCC\",\"selectedLang\":\"DropDown_selectedLang__3_pOp\",\"active\":\"DropDown_active__3sCXq\",\"modal\":\"DropDown_modal__jPL-3\",\"item\":\"DropDown_item__70VHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__Sp_Cm\",\"subTitle\":\"Header_subTitle__BLCb3\",\"signIn\":\"Header_signIn__15vdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Inputs_inputWrapper__RIQWv\",\"input\":\"Inputs_input__7aor_\",\"errorMessage\":\"Inputs_errorMessage__XGYqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__2ttrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteBg\":\"WhiteBlock_whiteBg__2NX6d\"};","import {ButtonProps} from \"./Button.props\";\r\nimport styles from './Button.module.scss'\r\nimport cn from \"classnames\";\r\n\r\nexport const Button = ({className}:ButtonProps):JSX.Element => {\r\n    return (\r\n        <button className={cn(styles.btn, className)}>Зарегистрироваться</button>\r\n    )\r\n}","import {DropDownProps} from \"./DropDown.props\";\r\nimport {useState} from \"react\";\r\nimport cn from \"classnames\";\r\nimport styles from './DropDown.module.scss'\r\n\r\nconst lang = [\r\n    {id: 0, name: 'Русский'},\r\n    {id: 1, name: 'Английский'},\r\n    {id: 2, name: 'Китайский'},\r\n    {id: 3, name: 'Испанский'},\r\n]\r\n\r\nexport const DropDown = ({className}: DropDownProps): JSX.Element => {\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const [item, setItem] = useState<number>(0)\r\n    const activeLang = lang.map(l => l.name)\r\n\r\n    const handleShowModal = () => {\r\n        setModal(!modal)\r\n    }\r\n\r\n    const onSelect = (index: number) => {\r\n        setItem(index)\r\n        setModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className={cn(styles.dropDown, className)}>\r\n            <span className={cn(styles.selectedLang ,{\r\n                [styles.active]: modal\r\n            })} onClick={handleShowModal}>\r\n                {activeLang[item]}\r\n                <svg\r\n                    width=\"16\"\r\n                    height=\"9\"\r\n                    viewBox=\"0 0 16 9\"\r\n                    fill=\"#0880AE\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M8 6.58579L14.2929 0.292893C14.6834 -0.0976311 15.3166 -0.0976311 15.7071 0.292893C16.0976 0.683418 16.0976 1.31658 15.7071 1.70711L8.70711 8.70711C8.31658 9.09763 7.68342 9.09763 7.29289 8.70711L0.292893 1.70711C-0.0976311 1.31658 -0.0976311 0.683418 0.292893 0.292893C0.683418 -0.0976311 1.31658 -0.0976311 1.70711 0.292893L8 6.58579Z\"/>\r\n                </svg>\r\n            </span>\r\n            {modal &&\r\n            <div className={styles.modal}>\r\n                {lang.map((l , index)=> <li key={l.id} className={styles.item} onClick={() => onSelect(index)}>{l.name}</li>)}\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import styles from './Header.module.scss';\r\n\r\nexport const Header = ():JSX.Element => {\r\n    return (\r\n        <>\r\n            <h1 className={styles.title}>Регистрация</h1>\r\n            <div className={styles.subTitle}>\r\n                <p>Уже есть аккаунт?</p>\r\n                <p className={styles.signIn}>Войти</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {InputProps} from \"./Input.props\";\r\nimport {ForwardedRef, forwardRef} from \"react\";\r\nimport styles from './Inputs.module.scss'\r\n\r\nexport const Input = forwardRef(({className,error, ...props}:InputProps,ref: ForwardedRef<HTMLInputElement>):JSX.Element => {\r\n    return (\r\n        <div className={styles.inputWrapper}>\r\n            <input ref={ref} className={styles.input} { ...props } />\r\n            { error && <span className={ styles.errorMessage }>{ error.message }</span> }\r\n        </div>\r\n    )\r\n})","import {WhiteBlockProps} from \"./WhiteBlock.props\";\r\nimport styles from './WhiteBlock.module.scss'\r\n\r\nexport const WhiteBlock = ({children}: WhiteBlockProps):JSX.Element => {\r\n    return (\r\n        <div className={styles.whiteBg}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import {Button, DropDown, Header, Input, WhiteBlock} from \"../components\";\r\nimport {useState} from \"react\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport styles from './Form.module.scss'\r\nimport cn from \"classnames\";\r\n\r\nexport interface IForm {\r\n    name: string\r\n    email: string\r\n    phone: string\r\n}\r\n\r\nexport const Form = () => {\r\n    const { register, handleSubmit, formState: { errors }} = useForm<IForm>()\r\n    const [value,setValue] = useState<string>('')\r\n    const [emailValue,setEmailValue] = useState<string>('')\r\n    const [phoneValue,setPhoneValue] = useState<string>('')\r\n    const [activeCheck,setActiveCheck] = useState<boolean>(false)\r\n    const [checkWarning,setCheckWarning] = useState<boolean>(false)\r\n\r\n    const valueCheck = value !== '' && emailValue !== '' && phoneValue !== '' && activeCheck\r\n\r\n    const regExpName = /^[А-Яа-яЁёa-zA-Z\\s-]+$/g\r\n    const regExpEmail = /[^@\\s]+@[^@\\s]+\\.[^@\\s]+/g\r\n    const regExpPhone = /^\\+?[78][-(]?\\d{3}\\)?-?\\d{3}-?\\d{2}-?\\d{2}$/g\r\n\r\n    const valueName = value.replace(/[^a-zA-Zа-яА-ЯЁё -]/g,'')\r\n    const valuePhone = phoneValue.replace(/[^-0-9 ()+]/g,'')\r\n\r\n    const onSubmit = (data: IForm) => console.log(data);\r\n\r\n    const handleActive = () => {\r\n        setActiveCheck(!activeCheck)\r\n        setCheckWarning(false)\r\n    }\r\n\r\n    const condition = () => {\r\n       alert('Примите соглашение')\r\n        setCheckWarning(true)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={valueCheck ? handleSubmit(onSubmit): handleSubmit(condition)} className={styles.form}>\r\n            <WhiteBlock>\r\n                <Header/>\r\n                <span className={styles.label}>Имя</span>\r\n                <Input\r\n                    { ...register('name',\r\n                        {\r\n                            required: { value:true, message: 'Введите имя' },\r\n                            pattern: regExpName\r\n                        }) }\r\n                    placeholder='Введите Ваше имя'\r\n                    error={ errors.name }\r\n                    className='input'\r\n                    type=\"text\"\r\n                    onChange={e => setValue(e.target.value)}\r\n                    value={valueName}\r\n                    title={\"Разрешены русские и английские буквы, пробел и символ - \"}\r\n                />\r\n                <span className={styles.label}>Еmail</span>\r\n                <Input\r\n                    { ...register('email',\r\n                        {\r\n                            required: { value:true, message: 'Введите email' },\r\n                            pattern: regExpEmail\r\n                        }) }\r\n                    placeholder='Введите ваш email'\r\n                    error={ errors.email }\r\n                    className='input'\r\n                    onChange={e => setEmailValue(e.target.value)}\r\n                    value={emailValue}\r\n                    title={\"Введите email\"}\r\n                />\r\n                <span className={styles.label}>Номер телефона</span>\r\n                <Input\r\n                    { ...register('phone',\r\n                        {\r\n                            required: { value:true, message: 'Введите номер телефона' },\r\n                            pattern: regExpPhone\r\n                        }) }\r\n                    placeholder='Введите номер телефона'\r\n                    error={ errors.phone }\r\n                    className='input'\r\n                    onChange={e => setPhoneValue(e.target.value)}\r\n                    value={valuePhone}\r\n                    title=\"Введите номер в формате +7(999)999-99-99 или 89999999999\"\r\n                />\r\n                <span className={styles.label}>Язык</span>\r\n                <DropDown/>\r\n                <div className={styles.wrapperCheckBox}>\r\n                    <div onClick={handleActive} className={cn(styles.checkBox, {\r\n                        [styles.activeCheckBox]: activeCheck,\r\n                        [styles.activeCheckWarning]: checkWarning\r\n                    })}>\r\n                        <svg width=\"16\" height=\"12\" viewBox=\"0 0 16 12\" fill=\"#0880AE\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M14.6343 0.634339C14.9467 0.32192 15.4533 0.32192 15.7657 0.634339C16.0781 0.946758 16.0781 1.45329 15.7657 1.76571L6.16569 11.3657C5.85327 11.6781 5.34673 11.6781 5.03432 11.3657L1.03431 7.36571C0.721895 7.05329 0.721895 6.54676 1.03431 6.23434C1.34673 5.92192 1.85327 5.92192 2.16569 6.23434L5.6 9.66865L14.6343 0.634339Z\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                    <span className={styles.conditions}>Принимаю <span>условия</span> использования</span>\r\n                </div>\r\n                <Button className={cn(styles.disableBtn, {\r\n                    [styles.activeBtn]: valueCheck\r\n                })}/>\r\n            </WhiteBlock>\r\n        </form>\r\n    )\r\n}","import {Form} from \"./page-component/Form\";\n\nconst App = ():JSX.Element =>{\n    return (\n        <Form />\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}